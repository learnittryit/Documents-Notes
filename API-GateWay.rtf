{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25100\viewh15700\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 https://www.moesif.com/blog/technical/api-gateways/How-to-Choose-The-Right-API-Gateway-For-Your-Platform-Comparison-Of-Kong-Tyk-Apigee-And-Alternatives/\
\
1. API Gateway - its a proxy server \
	proxy means : receive a client request -->make some changes , and hence becomes proxy : \
	proxy : its a manipulated client request\
\
2. Why API:\
	Authentication\
	Rate Limiting : Limit the number of requests to micro services i.e control traffic\
	routing : client request to appropriate micro service\
	Load Balancing : Internal Load Balancing b/w micro services and instances\
\
Monolithic --> Micro services --> nano Services --> serverless computing\
To Manage + Single point of Contact --------> API Gateway is popular now \{Based on Aggregate Design Pattern\}\
\
\

\f1\b \ul Advantages of API\

\f0\b0 \ulnone \
1. Decoupling through Routing - Like Load Balancing in GCP can be based on\
				: header , methods ( Get  /  Post ), path -end points, host names etc.\
				Since internal changes in micro services is not to be exposed to client , its decoupled\
2. No round trips:Aggregate Design Pattern : For client multiple services are needed to perform one operation e.g Book a ticket\
						Choose movie + place order + pay= End booking done \
						Client will send one request and will get one response = All the other micro services responses are aggregated and send as a one.\
3. Security: Authentication , rate limiting . Many use Redis to store sessions information also .\
4. Cross Cutting Concerns : Logging , Caching can be centralized\
\

\f1\b \ul Some API Gateways are
\f0\b0 \ulnone  : Kong , Tyk.io , APIGee , AWS Gateway, Azur Gateway, Express Gateway , Spring Cloud Gateway\
\
\

\f1\b \ul Spring Cloud Gateway\
\

\f0\b0 \ulnone Spring Cloud Teams made on top of Spring Reactive Ecosystem\
Important points , \
Route : ID , destination uri i.e path , collection of predicate and filters\
	rout matched - based on header , path and then predicate is set as true\
		Match the route means - Koi uska corresponding matching uri hai ... It there any uri address\
	\
	filter -Spring Framework Gateway Filter\
\
			\
}