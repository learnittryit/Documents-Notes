Human thinking or scenarios converted to logic [Domain Knowlege to code]
Downside :
	1. Someone has to go to code and change it
	2. Domain Expert is always needed to make changes




Machine Learning
================

We are giving data as an input + related information +Expected output == Based on the information it will understand the pattern and
learn itself {Mathematical Algorithm}	
How do we teach our brain ... we will allow the machine to be tought  

1. {
	Patters are created and we make the machine identify the patterns and make decision
	
	Labeling the Data:
	2 input streams (Data is labeled)
		Data									------> Based on this [Mathematical Transformation Rules] are identified  , 
		Answers related o provided data					the expected output. These Rules are encapsulated in a "TRAINED MODEL"
	}
2. These trained model are then used to classify if this unseen picture is a Dog or a Cat as an example
 So basically without changing a single line of code , an input spream of data adapt the knowledge and becomes a part of 
 Traininig Model
 
 moti aakn, moochein, choti height -- then billi 
 If new image comes it will see its attributes and will decided on the trained model. New unsseen image has now become a part of
 Model also


Deep Learning - > Layers are building block in Deep Learning [Input Layer] --> [Hidden Layers (S is here)] --> Output Layer
=============
1. small brain- (Shallow Learning)
	Large
		Colossal - (Deep Learning)

Input Layer inputs Data to another layer which transform the date and Pass to Output Layer.

Shallow Learning - If "less Layers" are present in the ML system.
					Learning Algorithm will catch small Patterns
					Simple use case - Analogy like small brain

Deep Learning - If "more Layers" are present in the ML system.
					Learning Algorithm will catch more Patterns
					 Analogy like Colossal brain

2. More Layers contributing to Model - Also called Neural Networks					

AI-->	(Umbrella Concept of Machine which can perform intellectual Task. Usually performed by Humans , which Machines can Mimic/simulate)
	-->ML (Self Learning Capability of Machine from Data )
		-->DL	(Amount of Knowlege needed by Machine to learn)
		
----------------------------------------------------------------------------------------------------------------------------------------------------

Weak AI - one task and achieveable
Generalized AI / Strong AI - Multiple co-ordinated tasks like humans 
Applied AI - Tangible Business Usecase

AI Feed 
1. Data - Now not a bottleneck
2. Hardware - Its a bottleneck , it takes hours or days to train models
GPU - Graphic Processing Unit v.v specilized CPU
	- Its more used for Machine Learnig insted of Games now
CPU -  

3. Done buy AI h/w use Cloud
4.
	Python
	skiket
	tenserflow 
	Kares
	Caffe
	Pytorch
----------------------------------------------------------------------------------------------------------------------------------------------------

BlackBox
===========================
1. BlackBox - >  A specific task is done my ML Process
ML Classifier Blackbox --- = Input -->[ML Brain] --> Output  > What is going inside this misterious ML Blackbox

Features and Labels
============================
2.Input --> [ML Brain] -- > Output

	2.1 Input = feature-1, feature-2 .... features-n
			E.g Size , color, contents , etc which basically is an input and can be used to get expected result to train data
			X = (x1,x2,....xn) where x are features
	2.2 Feature Selection - Selecting right features is a imperative step in the process

3. Output = 	Label is an Output 
				e.g Identified Object e.g cat , dog, prize i.e prediction
				Based on the features the label is decided.
				This picture of e.g has 
					-> features : 2 eyes, 1 nose,2legs
					-> 	Label : Human , its labled as a human based on the features
					
	 			Label ===> Y = F(X)
	 			where 	Y = Label
	 					X = Features

Examples 2 types (Labeled and Un-Labeled Examples)
===========================
	 					
Labeled Example VS Un-Labeled Example
Labeled Example  	:	(x,y)  <- (feature,label)
Un-Labeled Example 	:	(x,?)  <- (feature, ? )

Training Dataset = Large Group of Labeled Examples
							
							{	
Training DataSet -- > 			(x1,y1),
								(x2,y2),
								(x3,y3),
								.
								.
								.
								(xn,yn)						
							}


Training Dataset is a Large Group of Labeled Examples

===========================









