{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Reactive programming - observe the data stream and then react\
RxJava\
\
Event Based , Asynchronous programming\
RX= Observable + Observer + Scheduler\
\
Observable - [Supplier]    emits data streams I.e they are suppliers\
\
\
Observer - [Consumer ]   consume emitted data from the observable\
					consume by subscribing subscribeOn()\
					call back onNext().      - receives data\
					call back onError()	- if error is thrown \
\
\
Schedulers -  Component in RX - for three management\
			Tells Observable and Observer on which thread they should run\
			\
			Observer \'97 ObserveOn().   Which thread to use\
			Observable - scheduleOn()\
\
			Schedulers.io() and Schedulets.newThread()\
\
\
SAGA\
\
Main transaction + Compensation Transactions}